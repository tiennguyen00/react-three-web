/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { GhibliShader } from './shaders/GhibliShader'
import * as THREE from 'three'

export default function Trees(props: any) {
  const { nodes } = useGLTF('/models/ghibli-art/trees.glb')
  const uniforms = useMemo(
    () => ({
      colorMap: new THREE.Uniform(props?.colors),
      brightnessThresholds: new THREE.Uniform([0.6, 0.35, 0.001]),
      lightPosition: new THREE.Uniform(new THREE.Vector3(-15, 15, -15)),
    }),
    [props?.colors],
  )

  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Foliage.geometry} position={[0.327, -0.046, -0.684]}>
        <shaderMaterial attach='material' {...GhibliShader} uniforms={uniforms} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/ghibli-art/trees.glb')

/* <Trees
        position={[0, 2, 0]}
        colors={[
          new THREE.Color('#427062').convertLinearToSRGB(),
          new THREE.Color('#33594e').convertLinearToSRGB(),
          new THREE.Color('#234549').convertLinearToSRGB(),
          new THREE.Color('#1e363f').convertLinearToSRGB(),
        ]}
      /> */
